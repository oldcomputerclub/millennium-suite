## The contents of this file are subject to the Mozilla Public License# Version 1.1 (the "License"); you may not use this file except in# compliance with the License. You may obtain a copy of the License at# http://www.mozilla.org/MPL/ # # Software distributed under the License is distributed on an "AS IS" basis,# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License# for the specific language governing rights and limitations under the# License. ## The Original Code is The JavaScript Debugger# # The Initial Developer of the Original Code is# Netscape Communications Corporation# Portions created by Netscape are# Copyright (C) 1998 Netscape Communications Corporation.## Alternatively, the contents of this file may be used under the# terms of the GNU Public License (the "GPL"), in which case the# provisions of the GPL are applicable instead of those above.# If you wish to allow use of your version of this file only# under the terms of the GPL and not to allow others to use your# version of this file under the MPL, indicate your decision by# deleting the provisions above and replace them with the notice# and other provisions required by the GPL.  If you do not delete# the provisions above, a recipient may use your version of this# file under either the MPL or the GPL.## Contributor(s):#  Robert Ginda, <rginda@netscape.com>, original author## NOTE ON LEADING/TRAILING SPACES AND QUOTES...# Strings in this file are stripped of leading and trailing qoutes, if they are# present.  This allows you to express leading and trailing whitespace, which# would otherwise be trimmed by the stringbundle code.  In order to express# a leading or trailing quote, use two of them.## For example...## my.message1 = "          foo"# my.message2 = "          foo#  Both of these produce 10 spaces, followed by the word ``foo''."# my.message3 = "foo          "# my.message3 = foo          "#  Both of these produce the word ``foo'', followed by 10 spaces.# my.message4 = A sphincter says, "what?""# my.message4 = "A sphincter says, "what?""#  Both of these produce the phrase ``A sphincter says "what?"''## character set to convert unicode messages to before writing them to a# profile report, or generated help text.msg.report.charset = utf-8msg.locale.version = 0.9.47+msn.bad.locale     = \u3053\u306E\u30D0\u30FC\u30B8\u30E7\u30F3\u306E Venkman \u306F ``%1$S'' \u306E\u30ED\u30B1\u30FC\u30EB\u3068\u4F9B\u306B\u4F7F\u7528\u3059\u308B\u3053\u3068\u3092\u60F3\u5B9A\u3057\u3066\u3044\u307E\u3059\u3002\u4E00\u65B9\u3001\u73FE\u5728\u4F7F\u7528\u3055\u308C\u3066\u3044\u308B\u30ED\u30B1\u30FC\u30EB\u306F ``%2$S'' \u3068\u306A\u3063\u3066\u3044\u307E\u3059\u3002\u3053\u306E\u307E\u307E\u4F7F\u7528\u3092\u7D9A\u884C\u3059\u308B\u3068\u4F55\u3089\u304B\u306E\u554F\u984C\u304C\u767A\u751F\u3059\u308B\u6050\u308C\u304C\u3042\u308A\u307E\u3059\u3002\u30C7\u30D5\u30A9\u30EB\u30C8\u306E\u30ED\u30B1\u30FC\u30EB\u306B\u5909\u66F4\u3059\u308B\u304B\u3001\u8A00\u8A9E\u30D1\u30C3\u30AF\u3092\u30A2\u30C3\u30D7\u30B0\u30EC\u30FC\u30C9\u3057\u3066\u304F\u3060\u3055\u3044\u3002msg.release.url = http://www.mozilla.org/releases/## exception descriptions ##err.notimplemented = \u672A\u5B9F\u88C5\u3067\u3059err.required.param = \u5FC5\u9808\u30D1\u30E9\u30E1\u30FC\u30BF %1$S \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093err.invalid.param  = \u30D1\u30E9\u30E1\u30FC\u30BF %1$S (%2$S) \u306E\u5024\u304C\u4E0D\u6B63\u3067\u3059# 1 url, 2 fileName, 3 lineNumber, 4 reasonerr.subscript.load = <%1$S> \u304B\u3089\u30B5\u30D6\u30B9\u30AF\u30EA\u30D7\u30C8\u306E\u8AAD\u307F\u8FBC\u307F\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3002err.no.debugger    = JavaScript \u30C7\u30D0\u30C3\u30AC\u30B5\u30FC\u30D3\u30B9\u304C\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002err.failure        = \u64CD\u4F5C\u306B\u5931\u6557: %1$Serr.no.stack       = \u30B9\u30BF\u30C3\u30AF\u304C\u3042\u308A\u307E\u305B\u3093## error messages ##msn.err.unknown.reason  = \u672A\u77E5\u306E\u7406\u7531msn.err.required.param  = \u5FC5\u9808\u30D1\u30E9\u30E1\u30FC\u30BF %1$S \u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093msn.err.invalid.param   = \u30D1\u30E9\u30E1\u30FC\u30BF %1$S (%2$S) \u306E\u5024\u304C\u4E0D\u6B63\u3067\u3059msn.err.invalid.pref    = Invalid value for preference %1$S (%2$S)msn.err.scriptload      = <%1$S> \u304B\u3089\u30B5\u30D6\u30B9\u30AF\u30EA\u30D7\u30C8\u306E\u8AAD\u307F\u8FBC\u307F\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3002msn.err.no.source       = ``%1$S'' \u306B\u8A72\u5F53\u3059\u308B\u30B9\u30AF\u30EA\u30D7\u30C8\u306F\u8AAD\u307F\u8FBC\u307E\u308C\u3066\u3044\u307E\u305B\u3093msn.err.no.command      = ``%1$S'' \u3068\u3044\u3046\u30B3\u30DE\u30F3\u30C9\u540D\u306F\u3042\u308A\u307E\u305B\u3093\u3002msn.err.no.such.view    = ``%1$S'' \u3068\u3044\u3046\u30D3\u30E5\u30FC\u306F\u3042\u308A\u307E\u305B\u3093\u3002msg.err.no.stack        = \u30B9\u30BF\u30C3\u30AF\u304C\u3042\u308A\u307E\u305B\u3093msg.err.no.eval.object  = \u8A55\u4FA1\u3059\u308B\u305F\u3081\u306E\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u9078\u629E\u3055\u308C\u3066\u3044\u307E\u305B\u3093msn.err.noscript        = ``%1$S'' \u306E\u305F\u3081\u306E\u30C7\u30D0\u30C3\u30B0\u53EF\u80FD\u306A\u30B9\u30AF\u30EA\u30D7\u30C8\u304C\u3042\u308A\u307E\u305B\u3093msn.err.disabled        = ``%1$S'' \u306F\u73FE\u5728\u5229\u7528\u3067\u304D\u307E\u305B\u3093msn.err.notimplemented  = ``%1$S'' \u306F\u307E\u3060\u5B9F\u88C5\u3055\u308C\u3066\u3044\u307E\u305B\u3093msn.err.ambigcommand    = \u30B3\u30DE\u30F3\u30C9\u304C\u66D6\u6627\u3067\u3059\u3002 ``%1$S'', %2$S commands match [%3$S]msn.err.bp.noline       = <%1$S> \u306B\u8A72\u5F53\u3057\u3001 %2$S \u884C\u76EE\u306B\u5B9F\u884C\u53EF\u80FD\u306A\u30B3\u30FC\u30C9\u3092\u542B\u3080\u30B9\u30AF\u30EA\u30D7\u30C8\u306F\u3042\u308A\u307E\u305B\u3093\u3002msn.err.bp.nodice       = No breakpoint set at <%1$S> line %2$Smsn.err.startup         = An exception occurred while initializing, please file a bug.\n%1$Smsn.err.cant.match      = \u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u306E\u8AAD\u307F\u8FBC\u307F\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F: ``%1$S'' \u306B\u4E00\u81F4\u3057\u307E\u305B\u3093msg.err.internal.bpt    = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u51E6\u7406\u4E2D\u306B\u5185\u90E8\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3002msn.err.internal.hook   = \u30D5\u30C3\u30AF ``%1$S'' \u3092\u51E6\u7406\u4E2D\u306B\u5185\u90E8\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3002msn.err.failure         = \u64CD\u4F5C\u306B\u5931\u6557: %1$Smsn.err.no.section      = Missing section before ``%1$S'' in <%2$S>.msn.err.no.template     = No pref for template named ``%1$S''.msn.err.internal.dispatch  = Internal error dispatching command ``%1$S''.msn.err.source.load.failed = URL <%1$S> \u306E\u8AAD\u307F\u8FBC\u307F\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F: %2$S.msn.err.no.such.container  = ``%1$S'' \u306B\u8A72\u5F53\u3059\u308B\u30B3\u30F3\u30C6\u30CA\u304C\u3042\u308A\u307E\u305B\u3093\u3002msg.err.condition.failed   = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u306E\u6761\u4EF6\u3092\u8A55\u4FA1\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3002msg.err.format.not.available = \u8981\u6C42\u3055\u308C\u305F\u5F62\u5F0F\u306E\u30BD\u30FC\u30B9\u306F\u5229\u7528\u3067\u304D\u307E\u305B\u3093\u3002msn.err.no.function     = Line %1$S in <%2$S> is not part of an executable function.msn.jsdurl.errpage = <html><head><title> \u30A8\u30E9\u30FC </title></head><body>Error loading &lt;<b>%1$S</b>&gt;<br>%2$S</body></html>msg.err.jsdurl.parse     = URL \u3092\u89E3\u6790\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3002msg.err.jsdurl.nosource  = URL \u306B\u306F\u30C6\u30AD\u30B9\u30C8\u30BD\u30FC\u30B9\u306F\u3042\u308A\u307E\u305B\u3093\u3002msg.err.jsdurl.noservice = \u8A72\u5F53\u3059\u308B\u30B5\u30FC\u30D3\u30B9\u304C\u3042\u308A\u307E\u305B\u3093\u3002msg.err.jsdurl.search    = \u691C\u7D22\u30D1\u30BF\u30FC\u30F3\u3067\u306E\u30A8\u30E9\u30FC\u3067\u3059\u3002msg.err.jsdurl.sourcetext = \u30BD\u30FC\u30B9\u30C6\u30AD\u30B9\u30C8\u306E\u4F4D\u7F6E\u3092\u7279\u5B9A\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3002msn.err.jsdurl.template  = ``%1$S'' \u3068\u3044\u3046\u540D\u79F0\u306E\u30C6\u30F3\u30D7\u30EC\u30FC\u30C8\u3092\u8AAD\u307F\u8FBC\u307F\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3002msn.err.meta.failed      = Error processing meta comment ``%1$S'' in <%2$S>, line %3$S.msg.err.this.not.object  = \u5F0F\u306E\u7D50\u679C\u306F\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093\u3002msn.err.unknown.pref     = Unknown pref name ``%1$S''.## "values" ##msg.val.unknown     = <unknown>msg.val.console     = x-jsd:interactive-sessionmsg.val.na          = <not-available>msg.val.none         = <none>msg.val.object      = <object>msg.val.expression  = <expression>msg.val.proto       = [[Prototype]]msg.val.parent      = [[Parent]]## words ##msg.val.min         = minmsg.val.max         = maxmsg.val.this        = thismsg.val.breakpoint  = breakpointmsg.val.debug       = error handlermsg.val.debugger    = debugger keywordmsg.val.throw       = thrown exceptionmsg.val.global      = globalmsg.val.scope       = scopemsg.val.exception   = exceptionmsg.val.on          = onmsg.val.off         = offmsg.val.tlscript    = __toplevel__msg.val.toscript    = [TimeoutScript]msg.val.ivscript    = [IntervalScript]msg.val.evscript    = [EvalScript]msg.url.native      = x-jsd:native-code## types ##msg.type.int        = integermsg.type.boolean    = booleanmsg.type.double     = doublemsg.type.function   = functionmsg.type.null       = nullmsg.type.object     = objectmsg.type.string     = stringmsg.type.unknown    = unknownmsg.type.void       = voidmsg.class.xpcobj       = XPComponentmsg.class.const.xpcobj = const XPComponentmsg.class.native.fun   = Native Functionmsg.class.script.fun   = Script Function## messages ##msg.query.close      = \u30C7\u30D0\u30C3\u30B0\u51E6\u7406\u306E\u9014\u4E2D\u3067\u3059\u3002\u9589\u3058\u307E\u3059\u304B\uFF1Fmsg.status.default   = JavaScript \u30C7\u30D0\u30C3\u30AC\u306B\u3088\u3046\u3053\u305Dmsn.status.loading   = ``%1$S'' \u306E\u30BD\u30FC\u30B9\u3092\u8AAD\u307F\u8FBC\u307F\u4E2Dmsn.status.marking   = ``%1$S'' \u306E\u30BD\u30FC\u30B9\u3092\u30DE\u30FC\u30AF\u4E2Dmsn.status.stopped   = %1$S, %2$S \u3067\u30B9\u30C8\u30C3\u30D7msn.floater.title    = JSD: %1$Smsg.alert   = \u8B66\u544Amsg.prompt  = \u5165\u529Bmsg.confirm = \u78BA\u8A8Dmsg.cant.pprint      = \u3053\u306E\u95A2\u6570\u3092\u6574\u5F62\u51FA\u529B\u3067\u304D\u307E\u305B\u3093\u3002msg.slash.required   = THINGS HAVE CHANGED: By default, all commands now start with a forward-slash ('/') character.  Any text that DOES NOT start with a forward-slash will be passed to the ``eval'' command.  For example, to execute the ``step'' command, type ``/step''.  To evaluate ``1 + 1'', you just need to type ``1 + 1''.  If you prefer the previous behavior, type ``/pref sessionView.requireSlash false''.msg.commasp          = , "msn.eval.in          = %1$S: %2$Smsn.stop             = Stopped for %1$S.msn.cont             = Continuing from %1$S.msn.subscript.loaded = Subscript <%1$S> loaded with result ``%2$S''.# 1 exception name, 2 fileName, 3 lineNumbermsn.eval.error       = %1$S: <%2$S>, line %3$Smsn.eval.threw       = Caught exception: ``%1$S''msg.hello            = Venkman \u306B\u3088\u3046\u3053\u305D\uFF01 Venkman \u306F JavaScript \u30C7\u30D0\u30C3\u30AC\u3067\u3059\u3002\u307E\u305A\u3001 FAQ <http://www.hacksrus.com/~ginda/venkman/faq/venkman-faq.html> \u3092\u304A\u8AAD\u307F\u304F\u3060\u3055\u3044\u3002\u8A73\u7D30\u306B\u3064\u3044\u3066\u306F Venkman \u30DB\u30FC\u30E0\u30DA\u30FC\u30B8 <http://www.mozilla.org/projects/venkman/> \u3092\u3054\u89A7\u304F\u3060\u3055\u3044\u3002msn.version          = \u3053\u306E Venkman \u306E\u30D0\u30FC\u30B8\u30E7\u30F3\u306F %1$S \u3067\u3059\u3002msn.tip1.help        = \u7279\u5B9A\u306E\u30B3\u30DE\u30F3\u30C9\u306E\u30D8\u30EB\u30D7\u3092\u53C2\u7167\u3059\u308B\u306B\u306F '%1$Shelp \u30B3\u30DE\u30F3\u30C9\u540D' \u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002msg.tip2.help        = \u30B3\u30DE\u30F3\u30C9\u30EA\u30D5\u30A1\u30EC\u30F3\u30B9\u3092\u691C\u7D22\u3059\u308B\u306B\u306F <x-jsd:help> \u3092\u3054\u89A7\u304F\u3060\u3055\u3044\u3002msg.tip3.help        = \u30B3\u30DE\u30F3\u30C9\u306B\u306F\u5148\u982D\u306B\u30B9\u30E9\u30C3\u30B7\u30E5 ('/') \u3092\u8FFD\u52A0\u3057\u307E\u3059\u3002\u30B9\u30E9\u30C3\u30B7\u30E5\u3067\u59CB\u307E\u3089\u306A\u3044\u30C6\u30AD\u30B9\u30C8\u306F JavaScript \u3068\u3057\u3066\u8A55\u4FA1\u3055\u308C\u307E\u3059\u3002\u4F8B\u3048\u3070\u3001 'step' \u30B3\u30DE\u30F3\u30C9\u3092\u5B9F\u884C\u3059\u308B\u306B\u306F '/step' \u3068\u5165\u529B\u3057\u307E\u3059\u3002 '1 + 1' \u3092\u8A55\u4FA1\u3057\u305F\u3044\u5834\u5408\u306F\u3001 '1 + 1' \u3068\u3060\u3051\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002msg.no.breaks.set    = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u304C\u30BB\u30C3\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002msg.no.fbreaks.set   = \u4E88\u5B9A\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u304C\u30BB\u30C3\u30C8\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002msn.no.properties     = %1$S \u306B\u306F\u30D7\u30ED\u30D1\u30C6\u30A3\u304C\u3042\u308A\u307E\u305B\u3093\u3002msn.no.cmdmatch      = ``%1$S'' \u306B\u8A72\u5F53\u3059\u308B\u30B3\u30DE\u30F3\u30C9\u304C\u3042\u308A\u307E\u305B\u3093\u3002msn.cmdmatch         = ``%1$S'' \u306B\u8A72\u5F53\u3059\u308B\u30B3\u30DE\u30F3\u30C9\u306F [%2$S] \u3067\u3059\u3002msn.cmdmatch.all     = \u5B9F\u88C5\u3055\u308C\u3066\u3044\u308B\u30B3\u30DE\u30F3\u30C9\u306F %1$S \u3067\u3059\u3002msn.props.header     = Properties of %1$S in debug target scope:msn.propsd.header    = Properties of %1$S in debugger scope:msn.bp.header        = %1$S breakpoints set:# 1 index, 2 file name, 3 linemsn.bp.line          = #%1$S <%2$S> line %3$Smsn.bp.created       = Breakpoint at <%1$S> line %2$S createdmsn.bp.cleared       = Breakpoint at <%1$S> line %2$S deletedmsn.bp.exists        = Breakpoint at <%1$S> line %2$S already set.msn.watch.header     = %1$S watches set:# 1 index, 2 file name, 3 linemsn.fbp.line         = #%1$S <%2$S> line %3$Smsn.fbp.created      = Future breakpoint at <%1$S> line %2$S created.msn.fbp.cleared      = Future breakpoint at <%1$S> line %2$S cleared.msn.fbp.exists       = Future breakpoint at <%1$S> line %2$S already set.msn.source.line      = %1$S: %2$S"msg.emode.ignore     = Errors will now be ignored.msg.emode.trace      = Errors will now be traced.msg.emode.break      = Errors will now stop the debug target.msg.tmode.ignore     = Exceptions will now be ignored.msg.tmode.trace      = Exceptions will now be traced.msg.tmode.break      = Exceptions will now stop the debug target.msn.iasmode          = Initialize at Startup is now %1$S.msn.save.layout      = Save Layout on Exit is now %1$S.msn.layout.list      = The following layouts have already been saved [%1$S].  Use ``save-layout <name>'' to save the current layout, or ``restore-layout <name>'' to restore a specific layout.msn.chrome.filter    = Chrome filtering is now %1$S.# 1 value, 2 framemsn.exception.trace  = Exception ``%1$S'' thrown from %2$S.# 1 message, 2 flags, 3 file, 4 line, 5 posmsn.erpt.error       = Error ``%1$S'' [%2$S] in file ``%3$S'', line %4$S, character %5$S.msn.erpt.warn        = Warning ``%1$S'' [%2$S] in file ``%3$S'', line %4$S, character %5$S.msn.profile.lost     = Lost profile data for script %1$S.msn.profile.state    = Profile data collection is now %1$S.msn.profile.saved    = Profile data saved to <%1$S>.msg.profile.cleared  = Profile data cleared.msn.profile.saving   = Generating profile report, file %1$S of %2$Smsg.open.file        = \u30D5\u30A1\u30A4\u30EB\u3092\u958B\u304F...msg.open.url         = \u8AAD\u307F\u8FBC\u3080 URL \u3092\u5165\u529B...msg.save.profile     = \u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u3092\u5225\u540D\u3067\u4FDD\u5B58...msg.save.source      = \u30BD\u30FC\u30B9\u3092\u5225\u540D\u3067\u4FDD\u5B58...msg.navigator.xul    = Navigator \u30A6\u30A4\u30F3\u30C9\u30A6msg.enter.watch      = \u30A6\u30A9\u30C3\u30C1\u3059\u308B\u5F0F\u3092\u5165\u529B:## property value flags ##msg.vf.enumerable = emsg.vf.readonly   = rmsg.vf.permanent  = pmsg.vf.alias      = Amsg.vf.argument   = amsg.vf.variable   = vmsg.vf.error      = Emsg.vf.exception  = Xmsg.vf.hinted     = h## formatting ### 1: argument name, 2: valuemsn.fmt.argument = %1$S=%2$S"# 1: property flags, 2: property name, 3: property valuemsn.fmt.property = [%1$S] %2$S = %3$S"# 1: function name, 2: filenamemsn.fmt.script = function %1$S in <%2$S># 1: function name, 2: arguments, 3: filename, 4: line numbermsn.fmt.frame = function %1$S(%2$S) in <%3$S> line %4$S# 1: type, 2: class name, 3: valuemsn.fmt.value.long = [%1$S] [class: %2$S] %3$S"# 1: type, 2: valuemsn.fmt.value.med  = [%1$S] %2$S"# 1: type, 2: valuemsn.fmt.value.short = %1$S:%2$S"# 1: property countmsn.fmt.object = %1$S properties# 1: ctor name, 2: property countmsn.fmt.object.value = {%1$S:%2$S}# 1: JS exception name, 2: error text, 3: file name, 4: line numbermsn.fmt.jsexception = %1$S: %2$S @ <%3$S> %4$S"# 1: error number,  2: error text, 3: file name, 4: line number, 5: function namemsn.fmt.badmojo = BadMojo %1$S: %2$S @ <%3$S> line %4$S (%5$S)# 1: var number, 2: valuemsn.fmt.tmp.assign = $[%1$S] = %2$S"# 1: string lengthmsn.fmt.longstr = %1$S characters# 1: command name 2: parametersmsn.fmt.usage = %1$S %2$S# 1: function namemsn.fmt.guessedname = [%1$S]# 1: program countermsn.fmt.pc = [%1$S]# 1: pref name 2: valuemsn.fmt.prefvalue = Preference ``%1$S'' is ``%2$S''# 1: index, 2: label, 3: valuemsn.fmt.watch.item = %1$S: %2$S = %3$S# 1: on|offmsn.fmt.pprint = Pretty Print is %1$S.# 1: frame number, 2: frame stringmsn.fmt.frame.line = #%1$S: %2$S# 1: file name, 2: line number, 3: pcmsn.fmt.frame.location = %1$S, line %2$S, pc %3$S# 1: function name, 2: start line, 3: end line, 4: call count, 5: recurse,# 6: total, 7: min, 8: max, 9: avgmsn.fmt.profile.str = %1$S: %2$S-%3$S, %4$S call(s)%5$S, %6$Sms total, %7$Sms min, %8$Sms max, %9$Sms avg# 1: max recurse depthmsn.fmt.profile.recurse = " (max depth %1$S)## menu headings ##msg.mnu.file = \u30D5\u30A1\u30A4\u30EBmsg.mnu.debug = \u30C7\u30D0\u30C3\u30B0msg.mnu.profile = \u30D7\u30ED\u30D5\u30A1\u30A4\u30EBmsg.mnu.view  = \u8868\u793Amsg.mnu.help  = \u30D8\u30EB\u30D7msg.mnu.emode = \u30A8\u30E9\u30FCmsg.mnu.tmode = \u30B9\u30ED\u30FCmsg.mnu.showhide  = \u8868\u793A\uFF0F\u975E\u8868\u793Amsg.mnu.session.colors = \u53CC\u65B9\u5411\u30BB\u30C3\u30B7\u30E7\u30F3\u306E\u8272msg.mnu.scripts.instance = \u30D5\u30A1\u30A4\u30EB\u30AA\u30D7\u30B7\u30E7\u30F3msg.mnu.scripts.wrapper  = \u95A2\u6570\u30AA\u30D7\u30B7\u30E7\u30F3msn.sourceheader.url   = <%1$S> Line %2$Smsn.default.alias.help = This command is an alias for |%1$S|.msn.launch.count      = Recorded local startup %1$S, global %2$S.msg.no.help           = Help not available.msn.extra.params      = Extra parameters ``%1$S'' ignored.msg.files.rec         = Files#msg.doc.consolehdr   = Console Commands#msg.doc.menuhdr      = Menus#msg.doc.popuphdr     = Popups#msg.doc.keyhdr       = Keysmsg.note.console     = This command is available from the console.msg.note.noconsole    = This command is NOT available from the console.msg.note.needstack   = You must be stopped at a breakpoint to use this command.msg.note.nostack     = You CANNOT be stopped at a breakpoint to use this command.msn.doc.commandlabel = "     Command Name: ``%1$S'' (%2$S)msn.doc.key          = "Keyboard Shortcut: %1$Smsn.doc.syntax       = "           Syntax: %1$S %2$Smsg.doc.notes        = \u6CE8\u91C8:msg.doc.description  = \u8A73\u7D30:msn.session.css   = Interactive Session now using CSS from <%1$S>.msn.session.title = \u53CC\u65B9\u5411\u30BB\u30C3\u30B7\u30E7\u30F3 [context: %1$S, scope: %2$S]msg.source2.help = \u8868\u793A\u3059\u308B\u30BD\u30FC\u30B9\u30D5\u30A1\u30A4\u30EB\u3092\u9078\u629E\u3057\u3066\u304F\u3060\u3055\u3044\u3002msg.margin.break     = " B "msg.margin.fbreak    = " F "msg.margin.breakable = " - "msg.margin.none      = "   "msg.bpprops.title    = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u306E\u60C5\u5831msg.bpprops.enabled  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u6709\u52B9\u306B\u3059\u308Bmsg.fbpprops.title   = \u4E88\u5B9A\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u306E\u60C5\u5831msg.fbpprops.enabled = \u4E88\u5B9A\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u6709\u52B9\u306B\u3059\u308B# view captionsmsg.view.breaks  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8msg.view.stack   = \u30B3\u30FC\u30EB\u30B9\u30BF\u30C3\u30AFmsg.view.session = \u53CC\u65B9\u5411\u30BB\u30C3\u30B7\u30E7\u30F3msg.view.locals  = \u30ED\u30FC\u30AB\u30EB\u5909\u6570msg.view.scripts = \u8AAD\u307F\u8FBC\u307E\u308C\u305F\u30B9\u30AF\u30EA\u30D7\u30C8msg.view.windows = \u958B\u3044\u3066\u3044\u308B\u30A6\u30A4\u30F3\u30C9\u30A6msg.view.source  = \u30BD\u30FC\u30B9\u30B3\u30FC\u30C9 (\u65E7)msg.view.source2 = \u30BD\u30FC\u30B9\u30B3\u30FC\u30C9 (\u65B0)msg.view.watches = \u30A6\u30A9\u30C3\u30C1###################### DO NO LOCALIZE THE *.params STRINGS ######################## hooks ##cmd.hook-break-clear.params = <break-wrapper>cmd.hook-break-clear.help   = Called when a breakpoint instance is cleared.cmd.hook-break-set.params = <break-wrapper>cmd.hook-break-set.help   = Called when a breakpoint instance is set.cmd.hook-debug-stop.help = Called when the debugger stops execution of the debug target.cmd.hook-debug-continue.help = Called when the debugger continues execution of the debug target.cmd.hook-display-sourcetext.params = <source-text> [<target-line> [<details>]]cmd.hook-display-sourcetext.help   = Called when the source text object <source-text> should be presented to the user.  <target-line> is the line which should appear at or near the top of the display.  If <details> is provided, it will be an object representing details about where the <source-text> object was derived from.cmd.hook-display-sourcetext-soft.params = <source-text> [<target-line> [<details>]]cmd.hook-display-sourcetext-soft.help   = Functions the same as |hook-display-sourcetext|, except the display should not be scrolled if <target-line> is already visible.cmd.hook-eval-done.help = Called when an expression is evaluated.cmd.hook-fbreak-clear.params = <fbreak>cmd.hook-fbreak-clear.help   = Called when a breakpoint instace is cleared.cmd.hook-fbreak-set.params = <fbreak>cmd.hook-fbreak-set.help   = Called when a breakpoint instace is set.cmd.hook-guess-complete.params = <script-instance>cmd.hook-guess-complete.help   = Called when function name guessing has completed for the script instance <script-instance>.cmd.hook-session-display.params = <message> <msgtype>cmd.hook-session-display.help   = Called when a message should be appended to the interactive session display.  <message> is the message as a string, or DOM node, <msgtype> is the message's type code.cmd.hook-script-manager-created.params = <script-manager>cmd.hook-script-manager-created.help   = Called when a new script manager is created.  Script managers delegate commands to one or more script-instance objects.  <script-manager> will be the new script manager object.  Script managers can be found keyed by URL in the |console.scriptManagers| object.cmd.hook-script-manager-destroyed.params = <script-manager>cmd.hook-script-manager-destroyed.help   = Called after <script-manager> has been removed from the |console.scriptManagers| object.  This happens after last contained script-instance is destroyed.cmd.hook-script-instance-created.params = <script-instance>cmd.hook-script-instance-created.help   = Called when a new script instance is created.  Script instances delegate commands to one or more script-wrappers.cmd.hook-script-instance-sealed.params = <script-instance>cmd.hook-script-instance-sealed.help = Called when <script-instance> is sealed.  Script instances are ``sealed'' when the top level function is created.  This signifies that the script source has been completely compiled.  Any non-function scripts created after this point will appear as a transient in the parent script-manager.cmd.hook-script-instance-destroyed.params = <script-instance>cmd.hook-script-instance-destroyed.help   = Called when the final script-wrapper contained by <script-instance> is invalidated.cmd.hook-source-load-complete.params = <sourceText> <status>cmd.hook-source-load-complete.help   = Called when the source text represented by the object <sourceText> is loaded (or reloaded.)  <status> indicates the status of the load.  A <status> of 0 indicates success, non-zero values indicate a failure.cmd.hook-transient-script.params = <script-wrapper>cmd.hook-transient-script.help   = Called when a script object that appears to be transient (the result of an eval, setTimeout, etc.) is created by the JavaScript engine.cmd.hook-window-closed.params = <window>cmd.hook-window-closed.help   = Called when a window object is destroyed.  <window> is a reference to the DOM window object for the window.cmd.hook-window-loaded.params = <event>cmd.hook-window-loaded.help   = Called when a source file is loaded into a window object.  <event> is a reference to the DOM event passed to the onLoad handler of the window.cmd.hook-window-opened.params = <window>cmd.hook-window-opened.help   = Called when a new window object is opened.  The source for this window will most likely *not* be loaded at this point.  <window> is a reference to the DOM window object for the new window.cmd.hook-window-resized.params = <window>cmd.hook-window-resized.help   = Called when the man Venkman window or a floating windoe is resized.  <window> will be a reference to the window object.cmd.hook-window-unloaded.params = <event>cmd.hook-window-unloaded.help   = Called when a source file is unloaded from a window object.  <event> is a reference to the DOM event passed to the onUnload handler of the window.cmd.hook-venkman-exit.help = Called before the debugger exits.cmd.hook-venkman-query-exit.help = Called when the debugger would like to exit.  A hook function can set |returnValue| on the event to |false| to cancel the exit.cmd.hook-venkman-started.help = Called when the debugger first starts up.## commands ##cmd.about-mozilla.label = Mozilla \u306B\u3064\u3044\u3066cmd.about-mozilla.help  = Display information about your Mozilla installation.cmd.break.label  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30BB\u30C3\u30C8cmd.break.params = [<url-pattern> <line-number>]cmd.break.help   = Set a breakpoint in all urls matching <url-pattern> at the line number <line-number>.  If no parameters are specified all active breakpoints will be listed.  See also: |clear|.cmd.break-props.label  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u306E\u60C5\u5831...cmd.break-props.params = <break-wrapper>cmd.break-props.help   = Display the properties dialog for the breakpoint represented by <break-wrapper>.cmd.chrome-filter.params = [<toggle>]cmd.chrome-filter.help   = Enables or disabled the filtering of chrome: urls.  With chrome: filtering on, the JavaScript files which make up the browser will not be displayed in the Script View, and the debugger will not step through them while debugging.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.cmd.clear.label  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30AF\u30EA\u30A2cmd.clear.params = <url-pattern> [<line-number>]cmd.clear.help   = Clears breakpoints in files which match <url-pattern>.  If <line-number> is provided, only breakpoints at that line will be cleared.cmd.clear-all.label  = \u3059\u3079\u3066\u306E\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30AF\u30EA\u30A2cmd.clear-all.help   = Clears every breakpoint currently defined.cmd.clear-break.label  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30AF\u30EA\u30A2cmd.clear-break.params = <break-wrapper> [<...>]cmd.clear-break.help   = Clear the breakpoint wrapped by <break-wrapper>.  If <break-wrapper> is a future breakpoint object, all child breakpoints will be cleared, but the future breakpoint will remain.cmd.clear-fbreak.label  = \u4E88\u5B9A\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30AF\u30EA\u30A2cmd.clear-fbreak.params = <break-wrapper> [<...>]cmd.clear-fbreak.help   = Clear the future breakpoint wrapped by <break-wrapper>.  If <break-wrapper> is a breakpoint instance object, the instance's parent future breakpoint will be cleared, but the instance will remain.  If the instance has no parent future breakpoint, the wrapper will be ignored.cmd.clear-profile.label = \u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u3092\u30AF\u30EA\u30A2cmd.clear-profile.help  = Zeros out any existing profile data.cmd.clear-script.label  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30AF\u30EA\u30A2cmd.clear-script.params = <script-wrapper> [<...>]cmd.clear-script.help   = Clear all breakpoints in the script wrapped by <script-wrapper>.cmd.clear-instance.label  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30AF\u30EA\u30A2cmd.clear-instance.params = <script-instance> [<...>]cmd.clear-instance.help   = Clear all breakpoints in the script instance referred to by <script-instance>.cmd.close.label = \u9589\u3058\u308Bcmd.close.help  = \u30C7\u30D0\u30C3\u30AC\u3092\u9589\u3058\u307E\u3059\u3002cmd.commands.params = [<pattern>]cmd.commands.help   = Lists all command names matching <pattern>, or all command names if pattern is not specified.cmd.copy-frames.label  = \u9078\u629E\u3057\u305F\u30D5\u30EC\u30FC\u30E0\u3092\u30B3\u30D4\u30FCcmd.copy-frames.params = <jsd-frame> [<...>]cmd.copy-frames.help   = Copy the selected frames to the clipboard.cmd.cont.label = \u7D9A\u884Ccmd.cont.key   = VK_F5cmd.cont.help  = Continue execution of the debug target.cmd.debug-script.label  = \u30C7\u30D0\u30C3\u30B0\u3092\u7121\u52B9\u306B\u3059\u308Bcmd.debug-script.params = <toggle> <script-wrapper> [<...>]cmd.debug-script.help   = Enable or disable debugging in the script wrapper <script-wrapper>.  While debugging is disabled, Venkman will *not* stop in the disabled scripts.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.cmd.debug-instance-on.label  = \u542B\u307E\u308C\u308B\u95A2\u6570\u306E\u30C7\u30D0\u30C3\u30B0\u3092\u7121\u52B9\u306B\u3059\u308Bcmd.debug-instance-on.params = <script-instance> [<...>]cmd.debug-instance-on.help   = Disable debugging in all functions contained by the script instance <script-instance>.cmd.debug-instance-off.label  = \u542B\u307E\u308C\u308B\u95A2\u6570\u306E\u30C7\u30D0\u30C3\u30B0\u3092\u6709\u52B9\u306B\u3059\u308Bcmd.debug-instance-off.params = <script-instance> [<...>]cmd.debug-instance-off.help   = Enable debugging in all functions contained by the script instance <script-instance>.cmd.debug-instance.label  = \u542B\u307E\u308C\u308B\u95A2\u6570\u306E\u30C7\u30D0\u30C3\u30B0\u3092\u5207\u308A\u66FF\u3048\u308Bcmd.debug-instance.params = <toggle> <script-instance> [<...>]cmd.debug-instance.help   = Enable or disable debugging in all functions contained by the script instance <script-instance>.  While debugging is disabled, Venkman will *not* stop in the disabled scripts.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.cmd.debug-transient.label  = Eval/Timeout \u306E\u30C7\u30D0\u30C3\u30B0\u3092\u7121\u52B9\u306B\u3059\u308Bcmd.debug-transient.params = <toggle> <url> [<...>]cmd.debug-transient.help   = Enable or disable debugging of transient scripts (like setTimeout() or eval()) associated with the url <url>.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.cmd.dumpprofile.label  = \u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u3092\u51FA\u529Bcmd.dumpprofile.params = [<file-name>]cmd.dumptree.params = <tree> [<depth>]cmd.emode.params = [<mode>]cmd.emode.help   = Sets what action the debugger should take when an error occurs in the debug target.  |emode ignore| ignores all errors, |emode trace| shows a log of the error in the console, and |emode break| stops excecution when an error is thrown.  |emode| without any parameter will display the current error mode.  Note that |emode| controls what happens whan an exception goes uncaught, to control what happens when an exception is *thrown*, use |tmode|.cmd.eval.params = <expression>cmd.eval.help   = Evaluates <expression> in the scope of the debug target's current frame.  See also: |frame|, |where|, |props|, and |evald|.cmd.evald.params = <expression>cmd.evald.help   = Evaluates <expression> in the debugger's scope.  See also: |eval|.cmd.em-break.label  = \u30A8\u30E9\u30FC\u7B87\u6240\u3067\u30B9\u30C8\u30C3\u30D7cmd.em-cycle.label  = Cycle Error Modecmd.em-cycle.key    = accel shift  Ecmd.em-ignore.label = \u30A8\u30E9\u30FC\u3092\u7121\u8996cmd.em-trace.label  = \u30A8\u30E9\u30FC\u3092\u305F\u3069\u308Bcmd.fbreak.label  = \u4E88\u5B9A\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30BB\u30C3\u30C8cmd.fbreak.params = [<url-pattern> <line-number>]cmd.fbreak.help   = Sets a ``future'' breakpoint.  Any time a script whose file name matches <url-pattern> is loaded, a breakpoint a <line-number> is set.  Setting a breakpoint at line 1 will cause the debugger to break when the script is loaded.  fbreak with no parameters will list all future breakponts.  This command is the same as |set-fbreak|, except the parameters are optional.  See also: |break|.cmd.set-fbreak.label = \u4E88\u5B9A\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30BB\u30C3\u30C8cmd.set-fbreak.params = <url-pattern> <line-number>cmd.set-fbreak.help   = Sets a ``future'' breakpoint.  Any time a script whose file name matches <url-pattern> is loaded, a breakpoint a <line-number> is set.  Setting a breakpoint at line 1 will cause the debugger to break when the script is loaded.  This command is the same as |fbreak|, except the parameters are not optional.  See also: |break|.cmd.fclear.label  = \u4E88\u5B9A\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30AF\u30EA\u30A2cmd.fclear.params = <url-pattern> [<line-number>]cmd.fclear.help   = Clears the future breakpoint(s) set for <url-pattern>.  If <line-number> is specified, only future breakpoints at that line are cleared.cmd.fclear-all.label = \u3059\u3079\u3066\u306E\u4E88\u5B9A\u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u30AF\u30EA\u30A2cmd.fclear-all.help  = Clears all future breakpoints currently defined.cmd.find-bp.label  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8\u3092\u691C\u7D22cmd.find-bp.params = <breakpoint>cmd.find-bp.help   = Focus the breakpoint specified by the Breakpoint object <breakpoint>.cmd.find-creator.label  = \u30AF\u30EA\u30A8\u30FC\u30BF\u3092\u691C\u7D22cmd.find-creator.params = <jsd-value>cmd.find-creator.help   = Focus the creator of the object referenced by the jsdIValue <jsd-value>.cmd.find-ctor.label  = \u30B3\u30F3\u30B9\u30C8\u30E9\u30AF\u30BF\u3092\u691C\u7D22cmd.find-ctor.params = <jsd-value>cmd.find-ctor.help   = Focus the constructor of the object referenced by the jsdIValue <jsd-value>.cmd.find-file.label  = \u30D5\u30A1\u30A4\u30EB\u3092\u958B\u304F...cmd.find-file.key    = accel Ocmd.find-file.params = [<file-name>]cmd.find-file.help   = Displays the contents of the file located at <file-name> in the script view, where <file-name> is an operating system specific path string.  If <file-name> is not provided, or is the character '?', a file chooser widget will be displayed.cmd.find-frame.label   = \u30D5\u30EC\u30FC\u30E0\u30BD\u30FC\u30B9\u3092\u691C\u7D22cmd.find-frame.params  = <frame-index>cmd.find-frame.help    = Focus the stack frame specified by the frame at index <frame-index>.cmd.find-script.label  = \u95A2\u6570\u3092\u691C\u7D22cmd.find-script.params = <script-wrapper> [<target-pc>]cmd.find-script.help   = Focus the script wrapped by <script-wrapper>.  If <target-pc> is provided, the view will be scrolled to display the associated line.cmd.find-sourcetext.params = <source-text> [<range-start> [<range-end> [<details> [<target-line>]]]]cmd.find-sourcetext.help   = Displays the source text object <sourceText>.  All of the text between <range-start> and <range-end> will be highlighted.  If <details> is provided, it will be an object representing details about where the <source-text> object was derived from.  If <target-line> is provided, the view will be scrolled to that line, otherwise the view will be scrolled to <range-start>.cmd.find-sourcetext-soft.params = <source-text> [<range-start> [<range-end> [<details> [<target-line>]]]]cmd.find-sourcetext-soft.help   = Functions the same as |find-sourcetext|, except the view is not scrolled if <target-line> is already visible.cmd.find-string.label = \u3053\u306E\u30D5\u30A1\u30A4\u30EB\u5185\u3092\u691C\u7D22...cmd.find-string.key   = accel Fcmd.find-string.help  = Brings up a ``Find Dialog'' for the currently selected tab.cmd.find-scriptinstance.label  = \u30D5\u30A1\u30A4\u30EB\u3092\u691C\u7D22cmd.find-scriptinstance.params = <script-instance> [<range-start> [<range-end> [<details> [<target-line>]]]]cmd.find-scriptinstance.help   = Displays the source text associated with the script instance <script-instance>.  All of the text between <range-start> and <range-end> will be highlighted.  If <details> is provided, it will be an object representing details about where the <script-instance> object was derived from.  If <target-line> is provided, the view will be scrolled to that line, otherwise the view will be scrolled to <range-start>.cmd.find-url.label  = URL \u3092\u691C\u7D22cmd.find-url.params = <url> [<range-start> [<range-end> [<details> [<target-line>]]]]cmd.find-url.help   = Displays the contents of the URL <url> in the source view.  All of the text between <range-start> and <range-end> will be highlighted.  If <details> is provided, it will be an object representing details about where the <url> object was derived from.  If <target-line> is provided, the view will be scrolled to that line, otherwise the view will be scrolled to <range-start>.cmd.find-url-soft.label  = URL \u3092\u30BD\u30D5\u30C8\u30D5\u30A9\u30FC\u30AB\u30B9\u691C\u7D22cmd.find-url-soft.params = <url> [<range-start> [<range-end> [<details> [<target-line>]]]]cmd.find-url-soft.help   = Functions the same as |find-url|, except the view is not scrolled if <target-line> is already visible.cmd.finish.label = \u30B9\u30C6\u30C3\u30D7\u30A2\u30A6\u30C8cmd.finish.key   = shift VK_F11cmd.finish.help  = Execute until the current stack frame returns.cmd.focus-input.key  = VK_ESCAPEcmd.focus-input.help = Places focus in the console's text input widget.cmd.frame.label  = \u73FE\u5728\u306E\u30D5\u30EC\u30FC\u30E0\u3092\u30BB\u30C3\u30C8cmd.frame.params = [<frame-index>]cmd.frame.help   = Sets the current frame to the one numbered <frame-index>, and displays a summary of the frame.  If <frame-index> is not provided, a summary of the current frame will be displayed.  Use the where command to list available frames and frame numbers.cmd.gc.help = Force the JavaScript garbage collector to run.  This may force unloaded scripts to be removed from the Loaded Scripts view.cmd.help.label  = \u30B3\u30DE\u30F3\u30C9\u30EA\u30D5\u30A1\u30EC\u30F3\u30B9cmd.help.params = [<pattern>]cmd.help.help   = Displays help on <pattern>, which can be a full command name, or the first few characters of the command name.  If <pattern> matches more than one command, help on all matching commands will be displayed.  If <pattern> is not provided, a command reference will be loaded in a browser window.cmd.loadd.label  = \u30C7\u30D0\u30C3\u30AC\u30B9\u30B3\u30FC\u30D7\u306B\u30B9\u30AF\u30EA\u30D7\u30C8\u3092\u8AAD\u307F\u8FBC\u3080cmd.loadd.params = <url>cmd.loadd.help   = Executes the contents of the url specified by <url> in the context of the debugger.  Useful for loading debugger plugins.  See also: The |initialScripts| pref.cmd.move-view.params = <view-id> <location-url>cmd.move-view.help   = Moves the view associated with <view-id> to the location specified by <location-url>.cmd.mozilla-help.label = \u30D8\u30EB\u30D7\u306E\u76EE\u6B21cmd.mozilla-help.help  = Display the table of contents for the Mozilla help system.cmd.next.label = \u30B9\u30C6\u30C3\u30D7\u30AA\u30FC\u30D0\u30FCcmd.next.key   = VK_F10cmd.next.help  = Executes the next line of script.  If a function call is encountered it is traced as a single instruction.cmd.open-dialog.params = <url> [<window-name> [<window-flags>]]cmd.open-dialog.help   = Opens a dialog window and loads the source from <url>.  This is typically used to open a new XUL window, though it can be used to load a web page without chrome.cmd.open-url.help  = Prompts the user for a url to load in the source view.cmd.open-url.label = URL \u3092\u958B\u304F...cmd.open-url.key   = accel shift Lcmd.pprint.params = [<toggle>]cmd.pprint.help   = Set or display the state of Pretty Print mode.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.cmd.pref.params  = [<pref-name> [<pref-value>]]cmd.pref.help    = Sets the value of the preference named <pref-name> to the value of <pref-value>.  If <pref-value> is not provided, the current value of <pref-name> will be displayed.  If both <pref-name> and <pref-value> are omitted, all preferences will be displayed.cmd.profile.params = [<toggle>]cmd.profile.help   = Enables or disables the collection of profile data.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.  cmd.profile-script.label   = \u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u3092\u7121\u52B9\u306B\u3059\u308Bcmd.profile-script.params = <toggle> <script-wrapper> [<...>]cmd.profile-script.help   = Enable or disable profiling the script <script-wrapper>.  While profiling is disabled, data will be discarded.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.cmd.profile-instance.label = \u542B\u307E\u308C\u308B\u95A2\u6570\u306E\u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u3092\u5207\u308A\u66FF\u3048\u308Bcmd.profile-instance.params = <toggle> <script-instance> [<...>]cmd.profile-instance.help   = Enable or disable profiling in all functions contained by the script instance <script-instance>.  While profiling is disabled, data will be discarded.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.cmd.profile-instance-on.label  = \u542B\u307E\u308C\u308B\u95A2\u6570\u306E\u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u3092\u7121\u52B9\u306B\u3059\u308Bcmd.profile-instance-on.params = <script-instance> [<...>]cmd.profile-instance-on.help   = Disable profiling in all functions contained by the script instance <script-instance>.cmd.profile-instance-off.label  = \u542B\u307E\u308C\u308B\u95A2\u6570\u306E\u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u3092\u6709\u52B9\u306B\u3059\u308Bcmd.profile-instance-off.params = <script-instance> [<...>]cmd.profile-instance-off.help   = Enable profiling in all functions contained by the script instance <script-instance>.cmd.profile-tb.label = \u30D7\u30ED\u30D5\u30A1\u30A4\u30EBcmd.props.params = <expression>cmd.props.help   = Lists the properties of the value returned by <expression>.  The expression is evaluated in the scope of the debug target's current frame.  See also: |where|, |frame|, |eval|, and |propsd|.cmd.propsd.params = <expression>cmd.propsd.help   = Lists the properties of the value returned by <expression>.  The expression is evaluated in the debugger's scope.  See also: |props|.cmd.exit.label = \u4E2D\u65ADcmd.exit.key   = accel Qcmd.quit.label = \u7D42\u4E86cmd.quit.key   = accel Qcmd.quit.help  = Classilla \u3092\u7D42\u4E86\u3057\u307E\u3059\u3002cmd.reload-source-tab.label  = \u30BD\u30FC\u30B9\u3092\u518D\u8AAD\u307F\u8FBC\u307Fcmd.reload-source-tab.params = [<index>]cmd.reload-source-tab.key    = accel Rcmd.reload-source-tab.help   = Reload the source in the tab located at the index specified by <index>.  If <index> is not provided, the current tab will be reloaded.cmd.release-notes.label = \u30EA\u30EA\u30FC\u30B9\u30CE\u30FC\u30C8cmd.release-notes.help  = Display the Mozilla release notes.cmd.close-source-tab.label  = \u30BF\u30D6\u3092\u9589\u3058\u308Bcmd.close-source-tab.key    = accel Wcmd.close-source-tab.params = [<index>]cmd.close-source-tab.help   = Close the tab located at the index specified by <index>.  If <index> is not provided, the current tab will be closed.cmd.restore-layout.params = [<name>]cmd.restore-layout.help   = Restores the view layout named <name>.  If <name> is not provided, the list of available layouts will be displayed.  The special name |factory| can be used to restore a default layout.cmd.reloadui.key = accel alt Rcmd.run-to.label  = \u884C\u307E\u3067\u5B9F\u884Ccmd.run-to.params = <script-wrapper> <pc>cmd.run-to.help   = Continue execution until program counter specified by <pc>, in the script specified by <script-wrapper> is reached.  The has the effect of setting a ``one time'' breakpoint at the line in question.cmd.save-default-layout.label = \u73FE\u5728\u306E\u30EC\u30A4\u30A2\u30A6\u30C8\u3092\u4FDD\u5B58cmd.save-layout.params = [<name>]cmd.save-layout.help   = Saves the current window layout, giving it the name <name>.  The layout can be restored later with the |restore-layout| command.  If <name> is not provided, the list of available layouts will be displayed.  Save to the name ``default'' to set the default layout Venkman restores on startup.  The ``factory'' layout cannot be overwritten.cmd.save-source-tab.label = \u30BD\u30FC\u30B9\u3092\u5225\u540D\u3067\u4FDD\u5B58...cmd.save-source-tab.params = [<index> [<target-file>]]cmd.save-source-tab.key   = accel Scmd.save-source-tab.help  = Saves the contents of the source file displayed in the tab at the position specified by <index> to a file on the local system.  If <index> is not provided, the current tab is saved.  If <target-file> is not provided, or is the character '?', a file chooser widget will be displayed.  <target-file> is an operating system specific path string.cmd.save-profile.label = \u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u3092\u5225\u540D\u3067\u4FDD\u5B58...cmd.save-profile.params = [<target-file> [<url> [<...>]]cmd.save-profile.help = Saves the profile data collected for one or more source files specified by <url> into the file at <target-file>.  If <target-file> is not provided, or is the character '?', a file chooser widget will be displayed.  If <url> is not provided, all profile data is saved.  <target-file> is an operating system specific path string, <url> is a complete url.cmd.search-scripts.params = [<pattern>]cmd.search-scripts.help   = Removes any scripts with URLs that do not match <pattern> from the Loaded Scripts view.  If <pattern> is not provided, all scripts will be displayed.cmd.session-css.params = [<css>]cmd.session-css.help   = Sets the current CSS file used to style the Interactive Session.  The value of <css> can be the text "default", "dark", or "light" OR a url to the CSS file to use.  The "default" css uses your browser defaults as foreground and background colors, "dark" is dark background in light text, and "light" is light background with dark text.  If <css> is not provided, the current value is printed.cmd.session-css-default.label = \u30D6\u30E9\u30A6\u30B6\u306E\u30C7\u30D5\u30A9\u30EB\u30C8cmd.session-css-dark.label    = \u80CC\u666F\u3092\u6697\uFF0F\u30C6\u30AD\u30B9\u30C8\u3092\u660Ecmd.session-css-light.label   = \u80CC\u666F\u3092\u660E\uFF0F\u30C6\u30AD\u30B9\u30C8\u3092\u6697cmd.set-eval-obj.label  = \u8A55\u4FA1\u3059\u308B\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3068\u3057\u3066\u30BB\u30C3\u30C8cmd.set-eval-obj.params = <jsd-value>cmd.set-eval-obj.help   = Sets the current ``evaluation object'' for use with the |eval| command.  The object referenced to by <jsd-value> will become the |this| object, and global variables will be resolved relative to the parent of <jsd-value>.cmd.scan-source.label  = \u30E1\u30BF\u30B3\u30E1\u30F3\u30C8\u3092\u30B9\u30AD\u30E3\u30F3cmd.scan-source.params = <script-instance>cmd.scan-source.help   = Scans the entire source file for comments in the form //@JSD_DIRECTIVE.  By default, the directives recognized are //@JSD_LOG, //@JSD_BREAK, and //@JSD_EVAL.  JSD_LOG evaluates whatever script follows it, logging the result to the Interactive Session view.  JSD_BREAK inserts a conditional breakpoint a the next executable line.  JSD_EVAL evaluates whatever script follows it, without logging or breaking.  Users can add additional directives with plug ins.cmd.scope.help = Lists the properties of the topmost object in the scope chain for the current frame.cmd.toggle-functions.label  = \u95A2\u6570\u3092\u542B\u3081\u308Bcmd.show-functions.params = [<toggle>]cmd.show-functions.help   = Controls whether or not function properties (sometimes referred to as methods) will be displayed in the Local Varables and Watch views.  After changing this value, you will need to close and open affected nodes in order to see the change.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.cmd.toggle-ecmas.label  = ECMA \u30D7\u30ED\u30D1\u30C6\u30A3\u3092\u542B\u3081\u308Bcmd.show-ecmas.params = [<toggle>]cmd.show-ecmas.help   = Controls whether or not the ECMA [[Parent]] and [[Prototype]] properties will be displayed in the Local Varables and Watch views.  After changing this value, you will need to close and open affected nodes in order to see the change.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.cmd.toggle-show-most-recent.label = \u91CD\u8907\u30D5\u30A1\u30A4\u30EB\u3092\u9664\u5916cmd.show-most-recent.params = [<toggle>]cmd.show-most-recent.help = Controls whether the Loaded Scripts view should show only the most recent script from a given URL, or all of them.  With this off, you may notice duplicate entries in the Loaded Scripts view.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.cmd.startup-init.label  = \u8D77\u52D5\u6642\u306B\u521D\u671F\u5316cmd.startup-init.params = [<toggle>]cmd.startup-init.help   = Sets the state of the "Initialize at Startup" feature.  With this feature enabled, the debugger will begin tracking scripts when the browser is first started, instead of waiting until the user interface is launched.  This will allow the script list to display files that were loaded before you started the debugger user interface.  This feature incurs a *slight* performance hit.  The value of <toggle> can be |true|, |on|, |yes|, or |1| to turn the flag on; |false|, |off|, |no|, or |0| to turn it off; or |toggle| to invert the current state.  If <toggle> is not provided, the current state will be displayed.cmd.source-coloring.label  = \u30BD\u30FC\u30B9\u3092\u8272\u4ED8\u3051\u8868\u793Acmd.source-coloring.params = [<toggle>]cmd.source-coloring.help   = Enables or disables the source code coloring feature in the Source Code view.  When working with large files, or on a slow machine, source coloring may take too long to be practical.  Turning off source coloring will make files load much faster.  You will need to reload the source code to see the effect of changing this setting.  If <toggle> is not provided, the current state will be displayed.cmd.stop.label = \u30B9\u30C8\u30C3\u30D7cmd.stop.key   = VK_F4cmd.stop.help  = Stop before the next line of code is executed.cmd.step.label = \u30B9\u30C6\u30C3\u30D7\u30A4\u30F3cmd.step.key   = VK_F11cmd.step.help  = Executes the next line of script and stops.cmd.testargs.params = <int> <word> [<word2> <word3>]cmd.testargs.help   = Function for testing argument parsing.  Pass it what it wants, and it'll spit out the event object to stdout.cmd.testargs1.params = <int> [<...>]cmd.testargs1.help   = Function for testing argument parsing.  Pass it what it wants, and it'll spit out the event object to stdout.cmd.this-expr.params = <expression>cmd.this-expr.help   = Sets the ``evaluation object'' to the result of <expression>.  The evaluation object is used as the |this| object in all evaluations.  The result of <expression> *must* be an object.  See also: |eval|, |props|, |watch-expr|, and |set-this-obj|.cmd.tmode.params = [<mode>]cmd.tmode.help   = Sets what action the debugger should take when an exception is thrown from the debug target.  |tmode ignore| ignores all exceptions, |tmode trace| shows a log of the exception to the console, and |tmode break| stops excecution when an exception is thrown.  |tmode| without any parameter will display the current throw mode.  Note that |tmode| controls what happens when an exception is *thrown*, to control what happens when an exception reaches the top level and becomes an error, use |emode|.  The key combination Control + T can be used to cycle the throw mode.cmd.tm-break.label  = \u4F8B\u5916\u7B87\u6240\u3067\u30B9\u30C8\u30C3\u30D7cmd.tm-cycle.label  = Cycle Exception Modecmd.tm-cycle.key    = accel Tcmd.tm-ignore.label = \u4F8B\u5916\u3092\u7121\u8996cmd.tm-trace.label  = \u4F8B\u5916\u3092\u305F\u3069\u308Bcmd.toggle-scripts-search-box.help   = Toggles the visibility of the search controls in the Loaded Scripts view.cmd.toggle-float.params = <view-id>cmd.toggle-float.help   = If the view specified by <view-id> is currently displayed in the main window, or is not visible, it will be placed in a new floating window.  If <view-id> is already in a floating window, it will be placed back in the main window.cmd.toggle-pprint.label = \u6574\u5F62\u51FA\u529Bcmd.toggle-pprint.key   = accel Pcmd.toggle-pprint.help  = \u6574\u5F62\u51FA\u529B\u30E2\u30FC\u30C9\u3092\u5207\u308A\u66FF\u3048\u307E\u3059\u3002cmd.toggle-save-layout.label = \u7D42\u4E86\u6642\u306E\u30EC\u30A4\u30A2\u30A6\u30C8\u3092\u4FDD\u5B58cmd.toggle-save-layout.help  = If set, the window layout will be saved before Venkman exits.cmd.toggle-view.params = <view-id>cmd.toggle-view.help   = If the view specified by <view-id> is currently displayed, it will be hidden.  Otherwise the view will be displayed in its last known location.cmd.toggle-chrome.label  = \u30D6\u30E9\u30A6\u30B6\u30D5\u30A1\u30A4\u30EB\u3092\u9664\u5916cmd.toggle-profile.label = \u30D7\u30ED\u30D5\u30A1\u30A4\u30EB\u3092\u6709\u52B9\u306B\u3059\u308Bcmd.toggle-breaks.label  = \u30D6\u30EC\u30FC\u30AF\u30DD\u30A4\u30F3\u30C8cmd.toggle-stack.label   = \u30B3\u30FC\u30EB\u30B9\u30BF\u30C3\u30AFcmd.toggle-session.label = \u53CC\u65B9\u5411\u30BB\u30C3\u30B7\u30E7\u30F3cmd.toggle-locals.label  = \u30ED\u30FC\u30AB\u30EB\u5909\u6570cmd.toggle-scripts.label = \u8AAD\u307F\u8FBC\u307E\u308C\u305F\u30B9\u30AF\u30EA\u30D7\u30C8cmd.toggle-windows.label = \u958B\u3044\u3066\u3044\u308B\u30A6\u30A4\u30F3\u30C9\u30A6cmd.toggle-source.label  = \u30BD\u30FC\u30B9\u30B3\u30FC\u30C9 (\u65E7)cmd.toggle-source2.label = \u30BD\u30FC\u30B9\u30B3\u30FC\u30C9 (\u65B0)cmd.toggle-watches.label  = \u30A6\u30A9\u30C3\u30C1cmd.version.label = Venkman \u306B\u3064\u3044\u3066cmd.version.help  = \u30D0\u30FC\u30B8\u30E7\u30F3\u60C5\u5831\u3092\u8868\u793A\u3057\u307E\u3059\u3002cmd.remove-watch.label  = \u30A6\u30A9\u30C3\u30C1\u3092\u524A\u9664cmd.remove-watch.params = <index> [<...>]cmd.remove-watch.help   = Removes the watch(es) at the 0 based index specified by <index>.cmd.watch-expr.label = \u30A6\u30A9\u30C3\u30C1\u3059\u308B\u5F0F\u3092\u8FFD\u52A0...cmd.watch-expr.params = [<expression>]cmd.watch-expr.help   = Evaluates <expression> in the debug target scope and adds the result to the watch window.  If <expression> is not provided, all watches are printed to the console.cmd.watch-exprd.params = [<expression>]cmd.watch-exprd.help   = Evaluates <expression> in the debugger scope and adds the result to the watch window.  If <expression> is not provided, all watches are printed to the console.cmd.watch-property.params = <jsd-value> <property-name>cmd.watch-property.help   = Adds the property named <property-name> of the object stored in <jsd-value> to the watch window.cmd.where.label = \u53CC\u65B9\u5411\u30BB\u30C3\u30B7\u30E7\u30F3\u306B\u30B9\u30BF\u30C3\u30AF\u3092\u51FA\u529Bcmd.where.help = Displays a summarized list of stack frames in the current call chain.