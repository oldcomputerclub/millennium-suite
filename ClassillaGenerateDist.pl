#!perl# Builds a distribution from the dist# Written for Classilla 9.0 (C)2009 Cameron Kaiser# Updated for Classilla 9.0.4 to support Application Bundles# GPLrequire 5.004;# in the future we may use more of these, I've included them all for# posterityuse Mac::Files;use Mac::Types;#use Mac::Events;#use Mac::AppleEvents;#use Mac::AppleEvents::Simple;#use Mac::Processes;use Mac::MoreFiles;use Mac::StandardFile;use File::Path;use File::Copy;use File::Basename;use Mac::Resources; # we need this to build the relative alias at the endprint "\n-- Classilla distribution generator --\n";#ActivateApplication('McPL');MacPerl::Answer("Select the executable in the dist:viewer folder", "OK");$classilla = StandardGetFile(0, "APPL");if ($classilla->sfGood()) {	$clap = dirname($classilla->sfFile());#	MacPerl::Answer("Awesome: $clap", "OK");} else {	MacPerl::Answer("Aborted.", "OK");	exit;}# Make the application home folder. This is what's dropped on MakeSMI, etc.$jclap = "${clap}:: RTM Package";mkdir($jclap, 0700) || do {	MacPerl::Answer("Unable to make $jclap: $! $@ $^E", "Abort");	exit;};$eclap = "${clap}::::Classilla Dist Resources";$hclap = $jclap;# Copy in the READMEs first. This makes it appear in the right place later.# This is stored in ::::Classilla Dist Resources:.foreach $w (" READ ME FIRST", " READ ME FIRST (Deutsch)", " READ ME FIRST (Nihongo)") {$eeclap = "${eclap}:${w}";$hhclap = "${jclap}:${w}";print "\nCopying Readme $eeclap -> $hhclap\n";copy($eeclap, $hhclap) || die("Copy failed: $! $@ $^E\n");}# Make the Classilla folder.$jclap = "${jclap}:Classilla";mkdir($jclap, 0700) || do {	MacPerl::Answer("Unable to make $bclap: $! $@ $^E", "Abort");	exit;};# Copy everything, turning aliases into real files, using breadth-first scanning.# There is a much simpler and probably more efficient way to do this, but# this manner ensures that everything is accounted for (and nothing you don't).(@dirs) = ( $clap );(@sources) = ();(@destinations) = ();while($dir = shift(@dirs)) {	opendir(D, $dir) || die("Failed to access $clap: $! $@ $^E\n");	ROAD: while($p = readdir(D)) {		$p = "$dir:$p";		print "$p";		if (-d $p) {			if ($p =~ /:CVS$/) {				print "<< skipping CVS directory\n";				next ROAD;			}			push(@dirs, $p);			print " << DIRECTORY\n";			$q = $p;			$q =~ s/^$clap/$jclap/;			print "making directory $q\n";			mkdir($q, 0700) || die("Failed to create $q: $! $@ $^E\n");			next ROAD;		}		if (-l $p) {			print " << ALIAS\n";			$j = readlink($p);			print "target is $j\n";			push(@sources, $j);		} else {			if ($p =~ /\.(idb|xSYM)$/) {				print "<< skipping CW bologna\n";				next ROAD;			}			if ($p =~ /:temp[0-9]{8}$/) {				print "<< skipping temp file\n";				next ROAD;			}			print "\n";			push(@sources, $p);		}		$q = $p;		$q =~ s/^$clap/$jclap/;		print "converted to $q\n";		push(@destinations, $q);				#last ROAD; # test only	}	closedir(D);}print "\n\nCopying files ...\n";foreach(@sources) {	$k = shift(@destinations);	print "$_ => $k\n";	copy($_, $k) || die("Copy failed: $! $@ $^E\n");}print "\n-- completed (OSErr = $^E) --\n";print "Now, put in any custom locales etc.\n";